name: Deploy to Kubernetes
on:
  push:
    branches: [ master ]

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Scan the backend for vulnerabilities
      uses: aquasecurity/trivy-action@0.28.0
      with:
        scan-type: repo
        scan-ref: ./server
        severity: CRITICAL,HIGH
        ignore-unfixed: true
        format: table

  build:
    runs-on: ubuntu-latest
    needs: scan
    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push frontend image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: fancyvanilla/resume-builder-frontend:v1
        context: "{{defaultContext}}:client"

    - name: Build and push backend image
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: fancyvanilla/resume-builder-backend:v1
        context: "{{defaultContext}}:server"

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set kubeconfig from secret
      env:
        KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
      run: |
        $env:KUBECONFIG_CONTENT | Out-File -FilePath kubeconfig -Encoding utf8
        echo "KUBECONFIG=$PWD/kubeconfig" >> $env:GITHUB_ENV
      shell: powershell
      
    - name: Helm lint
      run: helm lint ./mychart

    - name: Deploy app
      run: |
        helm upgrade --install myapp ./mychart --namespace web-server --create-namespace
