# App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-frontend
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: resume-builder-frontend
  template:
    metadata:
      labels:
        app: resume-builder-frontend
    spec:
      containers:
        - name: client
          image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.frontend.image.port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resume-builder-backend
  template:
    metadata:
      labels:
        app: resume-builder-backend
    spec:
      nodeSelector:
        kubernetes.io/hostname: k8s-worker-node-1
      containers:
        - name: server
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          volumeMounts:
            - name: uploads
              mountPath: /uploads
          ports:
            - containerPort: {{ .Values.backend.image.port }}
          env:
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-env
                  key: GROQ_API_KEY
      restartPolicy: Always
      volumes:
        - name: uploads
          hostPath:
            path: /mnt/data/uploads
            type: DirectoryOrCreate
