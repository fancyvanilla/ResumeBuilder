# App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-frontend
spec: 
  replicas: {{ .Values.frontend.replicas | default 1 }}
  selector:
    matchLabels:
      app: resume-builder-frontend
  template:
    metadata:
      labels:
        app: resume-builder-frontend
    spec:
      containers:
        - name: client
          image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.frontend.image.port }}
          resources:
            requests:
              cpu: {{ .Values.frontend.resources.requests.cpu | default "100m" }}
              memory: {{ .Values.frontend.resources.requests.memory | default "200Mi" }}
            limits:
              cpu: {{ .Values.frontend.resources.limits.cpu | default "100m" }}
              memory: {{ .Values.frontend.resources.limits.memory | default "200Mi" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-builder-backend
spec:
  replicas: {{ .Values.backend.replicas | default 1 }}
  selector:
    matchLabels:
      app: resume-builder-backend
  template:
    metadata:
      labels:
        app: resume-builder-backend
    spec:
      containers:
        - name: server
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          volumeMounts:
            - mountPath: /uploads
              name: nfs-storage
          ports:
            - containerPort: {{ .Values.backend.image.port }}
          resources:
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu | default "200m" }}
              memory: {{ .Values.backend.resources.requests.memory | default "300Mi" }}
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu | default "100m" }}
              memory: {{ .Values.backend.resources.limits.memory | default "150Mi" }} 
          env:
            - name: GROQ_API_KEY
              valueFrom:
                secretKeyRef:
                  name: backend-env
                  key: GROQ_API_KEY
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.backend.image.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
      restartPolicy: Always
      volumes:
        - name: nfs-storage
          persistentVolumeClaim:
            claimName: nfs-pvc
